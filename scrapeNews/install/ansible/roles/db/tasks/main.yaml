---
# Install and Configure Postgres Database Server

- name: add repository keys
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present
  when:
    ansible_distribution == "Ubuntu" and ansible_distribution_version|float <= 16.04 and not remote_db

- name: add repository for psql 9.6
  shell: add-apt-repository "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -sc)-pgdg main"
#  apt_repository:
#    repo: 'deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -sc)-pgdg main'
#    state: present
#    update_cache: yes
  when:
    ansible_distribution == "Ubuntu" and ansible_distribution_version|float <= 16.04 and not remote_db
  notify: update cache

- name: Install Postgresql Database
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - postgresql
    - postgresql-9.6
  when: not remote_db

- name: start postgresql service
  service:
    name: postgresql
    state: restarted
    enabled: yes
  when: not remote_db

- name: Set Root DB Password
  become_user: postgres
  become: yes
  postgresql_user:
    name: postgres
    password: "{{ db_root_pass }}"
    state: present
    encrypted: yes
  when: not remote_db

- name: Create Database
  become_user: postgres
  become: yes
  postgresql_db: 
    name:  "{{ db_name }}"
  when: not remote_db

- name: Create DB USER
  become_user: postgres
  become: yes
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_pass }}"
    role_attr_flags: LOGIN
    state: present
    encrypted: yes

- name: GRANT PRIVILEGES
  become_user: postgres
  become: yes
  postgresql_privs:
    db: "{{ db_name }}"
    privs: ALL
    role: "{{ db_user }}"
    grant_option: no
    state: present
    type: database